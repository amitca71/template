version: 2
jobs:
  stamp:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: sed -i "s/-dev/-${CIRCLE_BUILD_NUM}/g" package.json
      - run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
      - persist_to_workspace:
          root: ./
          paths:
            - package.json
            - .npmrc

  dependencies:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: npm install --production --no-save
      - save_cache:
          key: dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

  dev_dependencies:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: npm install --only=dev --no-save
      - save_cache:
          key: dev_dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

  docs:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: echo "Will generate documentation in this step"

  code_review:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: cat package.json
      - restore_cache:
          key: dependencies-{{ checksum "package.json" }}
      - restore_cache:
          key: dev_dependencies-{{ checksum "package.json" }}
      - run: npm run tslint

  build_dev:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dev_dependencies-{{ checksum "package.json" }}
      - run:
          ./node_modules/.bin/tsc -p tsconfig.json --skipLibCheck true
          --listFiles true --listEmittedFiles true --declaration true
          --sourceMap false --inlineSourceMap true --inlineSources true
      - persist_to_workspace:
          root: ./
          paths:
            - dist/*
  build_prod:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dev_dependencies-{{ checksum "package.json" }}
      - run:
          ./node_modules/.bin/tsc -p tsconfig.json --removeComments true
          --skipLibCheck true --sourceMap false --listFiles true
          --listEmittedFiles true --declaration true
      - persist_to_workspace:
          root: ./
          paths:
            - dist/*
  test:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dev_dependencies-{{ checksum "package.json" }}
      - restore_cache:
          key: dependencies-{{ checksum "package.json" }}
      - run: npm test
      - store_test_results:
          path: .nyc_output

  deploy_dev:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: mv dist/* .
      - run: sudo apt-get install tree -y && tree -a
      - run: npm publish --access public --tag dev --dry-run

  cache_master:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          echo 'export RELEASE="$(cat package.json | jq -r '.version' | cut -f1
          -d'-')"' >> $BASH_ENV
      - run: source $BASH_ENV
      - run: echo "${RELEASE}"
      - run: echo "$RELEASE$"
      - run: echo "{{ RELEASE }}"
      - save_cache:
          key: v{{ .Environment.RELEASE }}
          paths:
            - ./

  # check_release:
  #   docker:
  #     - image: circleci/node:10
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: ./
  #     - run: npm publish --access public --dry-run
  # deploy_release:
  #   docker:
  #     - image: circleci/node:10
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: ./
  #     - run: npm publish --access public --dry-run

workflows:
  version: 2
  develop_commit:
    jobs:
      - stamp:
          filters:
            branches:
              only: develop
      - dependencies:
          filters:
            branches:
              only: develop
      - dev_dependencies:
          filters:
            branches:
              only: develop
      - docs:
          filters:
            branches:
              only: develop
      - code_review:
          requires:
            - dev_dependencies
            - dependencies
          filters:
            branches:
              only: develop
      - build_dev:
          requires:
            - dev_dependencies
          filters:
            branches:
              only: develop
      - test:
          requires:
            - build_dev
            - dependencies
            - dev_dependencies
          filters:
            branches:
              only: develop
      - deploy_dev:
          requires:
            - stamp
            - test
          filters:
            branches:
              only: develop
  master_commit:
    jobs:
      - stamp:
          filters:
            branches:
              only: master
      - dependencies:
          filters:
            branches:
              only: master
      - dev_dependencies:
          filters:
            branches:
              only: master
      - docs:
          filters:
            branches:
              only: master
      - code_review:
          requires:
            - dev_dependencies
          filters:
            branches:
              only: master
      - build_prod:
          requires:
            - dev_dependencies
          filters:
            branches:
              only: master
      - test:
          requires:
            - build_prod
            - dependencies
            - dev_dependencies
          filters:
            branches:
              only: master
      - cache_master:
          requires:
            - stamp
            - test
            - docs
          filters:
            branches:
              only: master
  test:
    jobs:
      - stamp:
          filters:
            branches:
              only: feature/cache_master
      - cache_master:
          requires:
            - stamp
          filters:
            branches:
              only: feature/cache_master
  # release:
  #   jobs:
  #     - check_release
  #     - hold:
  #         type: approval
  #         requires:
  #           - check_release
  #         filters:
  #           tags:
  #             only: /v[0-9]+(\.[0-9]+)+(\.[0-9]+)/
  #     - deploy_release:
  #         requires:
  #           - hold
