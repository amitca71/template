version: 2.1
jobs:
  sonarcloud:
    docker:
      - image: circleci/openjdk:8
    steps:
      - checkout
      - run:
          name: Setup Sonar Scanner
          command: |
            curl -o scanner.zip 'https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip'
            mkdir sonar-scanner
            unzip scanner.zip
            chmod +x sonar-scanner-3.3.0.1492-linux/bin/sonar-scanner
      - run:
          name: Setup Sonar Scanner
          command: |
            ./sonar-scanner-3.3.0.1492-linux/bin/sonar-scanner \
            -Dsonar.projectKey=rcmedeiros_template \
            -Dsonar.organization=rcmedeiros-github \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${SONAR_LOGIN}

  stamp:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: sed -i "s/-dev/-${CIRCLE_BUILD_NUM}/g" package.json
      - run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
      - persist_to_workspace:
          root: ./
          paths:
            - package.json
            - .npmrc

  dependencies:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dependencies-{{ checksum "package.json" }}
      - run:
          command: |
            chmod 700 .circleci/install.sh
            ./.circleci/install.sh
      - save_cache:
          key: dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

  dev_dependencies:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dev_dependencies-{{ checksum "package.json" }}
      - run:
          command: |
            chmod 700 .circleci/install.sh
            ./.circleci/install.sh dev
      - save_cache:
          key: dev_dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

  audit_dependencies:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: npm audit
      - run: npm i snyk
      - run: ./node_modules/.bin/snyk test

  docs:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: echo "Will generate documentation in this step"

  code_review:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dependencies-{{ checksum "package.json" }}
      - restore_cache:
          key: dev_dependencies-{{ checksum "package.json" }}
      - run: |
          ./node_modules/.bin/tslint --project tsconfig.json \
          --config src/tslint.json --format junit \
          --out ./reports/tslint/tslint.xml
      - store_test_results:
          path: reports

  build:
    parameters:
      production:
        type: boolean
        default: false
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dev_dependencies-{{ checksum "package.json" }}
      - when:
          condition: << parameters.production >>
          steps:
            - run:
                ./node_modules/.bin/tsc -p tsconfig.json --removeComments true
                --skipLibCheck true --sourceMap false --listFiles true
                --listEmittedFiles true --declaration true
      - unless:
          condition: << parameters.production >>
          steps:
            - run:
                ./node_modules/.bin/tsc -p tsconfig.json --skipLibCheck true
                --listFiles true --listEmittedFiles true --declaration true
                --sourceMap false --inlineSourceMap true --inlineSources true
      - persist_to_workspace:
          root: ./
          paths:
            - dist/*

  test:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dev_dependencies-{{ checksum "package.json" }}
      - restore_cache:
          key: dependencies-{{ checksum "package.json" }}
      - run:
          name: Run Tests!
          command: |
            ./node_modules/.bin/nyc ./node_modules/.bin/mocha \
            --require ts-node/register --check-leaks --timeout 300 \
            --recursive -exit test/*-test.ts --reporter mocha-junit-reporter \
            --reporter-options mochaFile=reports/mocha/test-results.xml
      - run:
          name: Report to Codecov
          command: |
            ./node_modules/.bin/nyc report --reporter=json
            bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN} -f coverage/coverage-final.json
      - run:
          name: Report to Coveralls
          command: |
            ./node_modules/.bin/nyc report --reporter=text-lcov | ./node_modules/.bin/coveralls
      - run:
          name: Send Report to Code Climate
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
            ./node_modules/.bin/nyc report --reporter=text-lcov > coverage/lcov.info
            ./cc-test-reporter after-build -t lcov
      - store_test_results:
          path: reports

  deploy_dev:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: mv dist/* .
      - run: sudo apt-get install tree -y && tree -a
      - run: npm publish --access public --tag dev --dry-run

  cache_release:
    parameters:
      master_branch:
        type: boolean
        default: false
      release_branch:
        type: boolean
        default: false
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: ./
      - run: mkdir .circleci
      - when:
          condition: << parameters.master_branch >>
          steps:
            - run: |
                echo "v$(cat package.json | jq -r '.version' | cut -f1 -d'-')" > .circleci/.release
      - when:
          condition: << parameters.release_branch >>
          steps:
            - run: |
                echo "${CIRCLE_BRANCH}" > .circleci/.release
      - run: cat .circleci/.release
      - save_cache:
          key: release-{{ checksum ".circleci/.release" }}
          paths:
            - ./

  check_release:
    parameters:
      master_branch:
        type: boolean
        default: false
      release_branch:
        type: boolean
        default: false
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - when:
          condition: << parameters.master_branch >>
          steps:
            - run: echo "${CIRCLE_TAG}" > .circleci/.release
      - when:
          condition: << parameters.release_branch >>
          steps:
            - run: echo "release/${CIRCLE_TAG}" > .circleci/.release
      - run: cat .circleci/.release
      - restore_cache:
          key: release-{{ checksum ".circleci/.release" }}
      - run: sudo apt-get install tree -y && tree -a
      - persist_to_workspace:
          root: ./
          paths:
            - ./*

  deploy_release:
    parameters:
      alpha:
        type: boolean
        default: false
      beta:
        type: boolean
        default: false
      release_candidate:
        type: boolean
        default: false
      stable:
        type: boolean
        default: false
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: ./
      - run: mv dist/* .
      - run: sudo apt-get install tree -y && tree -a
      - when:
          condition: << parameters.alpha >>
          steps:
            - run: npm publish --access public --tag alpha --dry-run
      - when:
          condition: << parameters.beta >>
          steps:
            - run: npm publish --access public --tag beta --dry-run
      - when:
          condition: << parameters.release_candidate >>
          steps:
            - run: npm publish --access public --tag next --dry-run
      - when:
          condition: << parameters.stable >>
          steps:
            - run: npm publish --access public --dry-run

workflows:
  development_commit:
    jobs:
      - stamp:
          filters:
            branches:
              only: develop
      - dependencies:
          filters:
            branches:
              only: develop
      - dev_dependencies:
          filters:
            branches:
              only: develop
      - audit_dependencies:
          requires:
            - dev_dependencies
          filters:
            branches:
              only: develop
      - docs:
          filters:
            branches:
              only: develop
      - code_review:
          requires:
            - dev_dependencies
            - dependencies
          filters:
            branches:
              only: develop
      - build:
          requires:
            - dev_dependencies
          filters:
            branches:
              only: develop
      - test:
          requires:
            - dependencies
            - dev_dependencies
            - audit_dependencies
            - build
          filters:
            branches:
              only: develop
      - deploy_dev:
          requires:
            - stamp
            - test
          filters:
            branches:
              only: develop
  staging_commit:
    jobs:
      - stamp:
          filters:
            branches:
              only:
                - master
                - /release\/v\d+\.\d+\.\d+-(alpha|beta|rc)(\.\d){0,1}/
      - dependencies:
          filters:
            branches:
              only:
                - master
                - /release\/v\d+\.\d+\.\d+-(alpha|beta|rc)(\.\d){0,1}/
      - dev_dependencies:
          filters:
            branches:
              only:
                - master
                - /release\/v\d+\.\d+\.\d+-(alpha|beta|rc)(\.\d){0,1}/
      - audit_dependencies:
          requires:
            - dev_dependencies
          filters:
            branches:
              only:
                - master
                - /release\/v\d+\.\d+\.\d+-(alpha|beta|rc)(\.\d){0,1}/
      - docs:
          filters:
            branches:
              only:
                - master
                - /release\/v\d+\.\d+\.\d+-(alpha|beta|rc)(\.\d){0,1}/
      - code_review:
          requires:
            - dev_dependencies
          filters:
            branches:
              only:
                - master
                - /release\/v\d+\.\d+\.\d+-(alpha|beta|rc)(\.\d){0,1}/
      - build:
          production: true
          requires:
            - dev_dependencies
          filters:
            branches:
              only:
                - master
                - /release\/v\d+\.\d+\.\d+-(alpha|beta|rc)(\.\d){0,1}/
      - test:
          requires:
            - dependencies
            - dev_dependencies
            - audit_dependencies
            - build
          filters:
            branches:
              only:
                - master
                - /release\/v\d+\.\d+\.\d+-(alpha|beta|rc)(\.\d){0,1}/
      - cache_release:
          release_branch: true
          requires:
            - stamp
            - test
            - docs
            - code_review
          filters:
            branches:
              only: /release\/v\d+\.\d+\.\d+-(alpha|beta|rc)(\.\d){0,1}/
      - cache_release:
          master_branch: true
          requires:
            - stamp
            - test
            - docs
            - code_review
          filters:
            branches:
              only: master
  release:
    jobs:
      - check_release:
          name: check_release_branch
          release_branch: true
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v\d+\.\d+\.\d+-(alpha|beta|rc)(\.\d){0,1}/
      - check_release:
          name: check_master_branch
          master_branch: true
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)+(\.[0-9]+)/
      - hold:
          type: approval
          requires:
            - check_master_branch
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)+(\.[0-9]+)/
      - deploy_release:
          alpha: true
          requires:
            - check_release_branch
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v\d+\.\d+\.\d+-(alpha)(\.\d){0,1}/
      - deploy_release:
          beta: true
          requires:
            - check_release_branch
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v\d+\.\d+\.\d+-(beta)(\.\d){0,1}/
      - deploy_release:
          release_candidate: true
          requires:
            - check_release_branch
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v\d+\.\d+\.\d+-(rc)(\.\d){0,1}/
      - deploy_release:
          stable: true
          requires:
            - hold
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)+(\.[0-9]+)/
  sonarcloud:
    jobs:
      - sonarcloud:
          filters:
            branches:
              only: feature/sonarcloud
