{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Stark Docs At first I had this project privately to myself where I could copy-and-paste already sorted out configurations to other projects, I think everyone has one of those. Now it\u2019s public and others can take advantage of it. Docs were written for coders in a rush, but I\u2019ll try to balance the amount of information not to be too vague. I just want you to copy-and-paste something that actually works without too much reading. References to full documentation are always included for deep dive later on with time.","title":"Home"},{"location":"#stark-docs","text":"At first I had this project privately to myself where I could copy-and-paste already sorted out configurations to other projects, I think everyone has one of those. Now it\u2019s public and others can take advantage of it. Docs were written for coders in a rush, but I\u2019ll try to balance the amount of information not to be too vague. I just want you to copy-and-paste something that actually works without too much reading. References to full documentation are always included for deep dive later on with time.","title":"Stark Docs"},{"location":"analytics/","text":"","title":"Analytics"},{"location":"badges/","text":"Badges / Shields All-in-one at Shields.io Build Coverage Analysis Chat Dependencies Size Downloads Funding Issue Tracking License Rating Social Version Platform & Version Support Monitoring Activity Other","title":"Badges"},{"location":"badges/#badges-shields","text":"","title":"Badges / Shields"},{"location":"badges/#all-in-one-at-shieldsio","text":"Build Coverage Analysis Chat Dependencies Size Downloads Funding Issue Tracking License Rating Social Version Platform & Version Support Monitoring Activity Other","title":"All-in-one at Shields.io"},{"location":"code_quality/","text":"","title":"Code Quality"},{"location":"coverage/","text":"Coverage","title":"Code Coverage"},{"location":"coverage/#coverage","text":"","title":"Coverage"},{"location":"extensions/","text":"Markdown Extensions Table of Contents toc Markdown Extensions Table of Contents Alternative Label CodeHilite SmartyPants Footnotes Attribute Lists Definition Lists Abbreviations New-Line-to-Break Extension Admonition The above index was automatically generated with the marker [TOC] CodeHilite codehilite function recurse ( startingPlace , otherFunc , callback_one ) { // code you may have ... if ( your_terminating_criterion === true ) { return callback_one ( val ); // where val is potentially some value you want to return (or a json object with results) } // more code you may have } 1 2 3 4 5 6 7 function recurse ( startingPlace , otherFunc , callback_one ) { // code you may have ... if ( your_terminating_criterion === true ) { return callback_one ( val ); // where val is potentially some value you want to return (or a json object with results) } // more code you may have } For some reason I didn\u2019t get the line numbers to align correctly. I added the extra CSS according to instructions but it didn\u2019t change anything AFAIK. Turning off all other extensions and switching themes didn\u2019t work either. SmartyPants smarty \u2018single quotes\u2019, \u201cquotes\u201d, \u00ab angle quotes \u00bb, \u2026 (ellipsis) and dashes \u2013 and \u2014 are converted to their HTML entity equivalents. Footnotes footnotes Click on this 1 or this 2 footnotes and be taken to additional text at the bottom of the page. Attribute Lists attr_list Definition Lists def_list Apple Pomaceous fruit of plants of the genus Malus in the family Rosaceae. Orange The fruit of an evergreen tree of the genus Citrus. Abbreviations abbr The HTML specification is maintained by the W3C . New-Line-to-Break Extension nl2br Will cause newlines to be treated as hard breaks; like StackOverflow and GitHub flavored Markdown do. Admonition admonition Attention This is an attention box Caution This is a caution box Danger This is a danger box Error This is an error box Hint This is a hint box Important This is an important box Note This is a note box Tip This is a tip box Warning This is a warning box For convenience, in the markdown file this additional block follows that first line with the footnotes. Although in the actual HTML it drops to the end. a code block A final paragraph. \u21a9 Notice the arrow at the end of this note: \u201c2\u201d. \u21a9","title":"Extensions"},{"location":"extensions/#markdown-extensions","text":"","title":"Markdown Extensions"},{"location":"extensions/#markdown","text":"toc Markdown Extensions Table of Contents Alternative Label CodeHilite SmartyPants Footnotes Attribute Lists Definition Lists Abbreviations New-Line-to-Break Extension Admonition The above index was automatically generated with the marker [TOC]","title":"Table of Contents Alternative Label"},{"location":"extensions/#codehilite","text":"codehilite function recurse ( startingPlace , otherFunc , callback_one ) { // code you may have ... if ( your_terminating_criterion === true ) { return callback_one ( val ); // where val is potentially some value you want to return (or a json object with results) } // more code you may have } 1 2 3 4 5 6 7 function recurse ( startingPlace , otherFunc , callback_one ) { // code you may have ... if ( your_terminating_criterion === true ) { return callback_one ( val ); // where val is potentially some value you want to return (or a json object with results) } // more code you may have } For some reason I didn\u2019t get the line numbers to align correctly. I added the extra CSS according to instructions but it didn\u2019t change anything AFAIK. Turning off all other extensions and switching themes didn\u2019t work either.","title":"CodeHilite"},{"location":"extensions/#smartypants","text":"smarty \u2018single quotes\u2019, \u201cquotes\u201d, \u00ab angle quotes \u00bb, \u2026 (ellipsis) and dashes \u2013 and \u2014 are converted to their HTML entity equivalents.","title":"SmartyPants"},{"location":"extensions/#footnotes","text":"footnotes Click on this 1 or this 2 footnotes and be taken to additional text at the bottom of the page.","title":"Footnotes"},{"location":"extensions/#attribute-lists","text":"attr_list","title":"Attribute Lists"},{"location":"extensions/#definition-lists","text":"def_list Apple Pomaceous fruit of plants of the genus Malus in the family Rosaceae. Orange The fruit of an evergreen tree of the genus Citrus.","title":"Definition Lists"},{"location":"extensions/#abbreviations","text":"abbr The HTML specification is maintained by the W3C .","title":"Abbreviations"},{"location":"extensions/#new-line-to-break-extension","text":"nl2br Will cause newlines to be treated as hard breaks; like StackOverflow and GitHub flavored Markdown do.","title":"New-Line-to-Break Extension"},{"location":"extensions/#admonition","text":"admonition Attention This is an attention box Caution This is a caution box Danger This is a danger box Error This is an error box Hint This is a hint box Important This is an important box Note This is a note box Tip This is a tip box Warning This is a warning box For convenience, in the markdown file this additional block follows that first line with the footnotes. Although in the actual HTML it drops to the end. a code block A final paragraph. \u21a9 Notice the arrow at the end of this note: \u201c2\u201d. \u21a9","title":"Admonition"},{"location":"mkdocs/","text":"MkDocs","title":"MkDocs"},{"location":"mkdocs/#mkdocs","text":"","title":"MkDocs"},{"location":"mocks/","text":"","title":"Mocks"},{"location":"monitoring/","text":"","title":"Monitoring"},{"location":"online_coverage/","text":"","title":"Online Coverage"},{"location":"pipeline/","text":"Pipeline For this template, I built the pipeline with CircleCI. I already work with GitLab CI/CD and Travis is quite popular so I chose to try this. It pleased me very much the way I can write parameterized jobs and reuse them in different workflows, the different kinds of persistence, and for the clarity of the final Yaml. It\u2019s quite a platform. There are three workflows: development_commit : Commits to branch develop; staging_commit : Commits to release or master branches; release : Commits of release tags. Now open the configuration in another window for the text bellow to make sense. stamp Every workflow stars with a stamp. Package.json version tag contains a \u201c-dev\u201d string that\u2019ll get replaced by the unique number of the spawned build, put there for tracking purposes. It\u2019ll also print the NPM Token to then .npmrc file, for unattended authentication. dependencies and dev_dependencies Development and production dependencies are cached separately and indexed by a checksum of package.json. It means it\u2019ll download and install them only once per package.json revision, when the checksum changes. That\u2019s why I wrote a script that calls npm install only when node_modules don\u2019t already exist. And to keep package.json from changing and messing with the checksum function, I had to use the --no-save flag docs MkDocs documentation are freely and easily deployed to ReadTheDocs through webhooks, and that should be a default approach. However, if your project isn\u2019t open source and you need the documentation deployed as a website, I wrote this job to generate the final HTML and push it back to the repository as an automated push. In this case, the folder is being watched and published by GitHub, but it might as well be an htdocs or wwwroot folder in a server elsewhere where files should go through SCP, or an AWS S3 hosted website pushed through AWS CLI. Unattended authentication will be implemented with SSH Keys. Open a term like Git Bash and run \u2018 ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" \u2019. The e-mail is important, the password should NOT be set. You know you did it right if the private key starts with \u201c -----BEGIN RSA PRIVATE KEY----- \u201c Private key is kept with CircleCI, public key goes to the remote server. To set up the public key: In GitHub, it\u2019s the path to the repository plus /settings/keys at the end; in GitLab, it\u2019s /settings/repository ; In Bitbucket, it\u2019s /admin/access-keys/ ; In a linux server, just add the public key as a new line to ~/.ssh/authorized_keys . To set up the private key in CircleCI repository (not dashboard, repository!), add /edit#ssh to the URL and click Add SSH Key. Hostname must match. E.g.: github.com . Copy the fingerprint. Now in the config.yml, see the fingerprint just before the Push new version command? That\u2019s what makes it. Don\u2019t forget to shred the files. They are meant to be use in these steps but not saved. The script .circleci/push_docs_site.sh is there to guarantee that only new versions of the site are going to be pushed. That\u2019s because sitemap.xml.gz is always generated regardless whether or not there were modifications, so it\u2019ll be left out of the decision. audit_dependencies It\u2019s not enough to make sure your code is tight, the code of the dependencies you use must be verified too. NPM audit is quite enough, but just to be safe I also check with Snyk , which connects to other vulnerability databases, such as CVEs from NVD and many others code_review If you are just starting to code, maybe you have a personal all yours way of organizing your thoughts that almost serves as a signature. It\u2019s no much of a problem if you\u2019re the only one who maintains it, but even in a small team people need to feel conformable giving maintenance to the code of others. That\u2019s why we need a conventional code style. The more consistent you code is, the cleaner will be your commits, and the faster other people will be able to understand it. TSLint is the default linter for TypeScript, and it\u2019s main objective is to enforce the code style. The most popular set of rules are tslint-config-airbnb , tslint-eslint-rules and tslint-config-prettier . Choose one of them, or make yourself another based on one of them. Just do it. This job is saving the result as a report in JUnit format because if it fails, you can see the occurrences in CircleCI UI. build Build is build, no further explanation required. Only this job has a different set of options for production code and development code.","title":"Pipeline"},{"location":"pipeline/#pipeline","text":"For this template, I built the pipeline with CircleCI. I already work with GitLab CI/CD and Travis is quite popular so I chose to try this. It pleased me very much the way I can write parameterized jobs and reuse them in different workflows, the different kinds of persistence, and for the clarity of the final Yaml. It\u2019s quite a platform. There are three workflows: development_commit : Commits to branch develop; staging_commit : Commits to release or master branches; release : Commits of release tags. Now open the configuration in another window for the text bellow to make sense.","title":"Pipeline"},{"location":"pipeline/#stamp","text":"Every workflow stars with a stamp. Package.json version tag contains a \u201c-dev\u201d string that\u2019ll get replaced by the unique number of the spawned build, put there for tracking purposes. It\u2019ll also print the NPM Token to then .npmrc file, for unattended authentication.","title":"stamp"},{"location":"pipeline/#dependencies-and-dev_dependencies","text":"Development and production dependencies are cached separately and indexed by a checksum of package.json. It means it\u2019ll download and install them only once per package.json revision, when the checksum changes. That\u2019s why I wrote a script that calls npm install only when node_modules don\u2019t already exist. And to keep package.json from changing and messing with the checksum function, I had to use the --no-save flag","title":"dependencies and dev_dependencies"},{"location":"pipeline/#docs","text":"MkDocs documentation are freely and easily deployed to ReadTheDocs through webhooks, and that should be a default approach. However, if your project isn\u2019t open source and you need the documentation deployed as a website, I wrote this job to generate the final HTML and push it back to the repository as an automated push. In this case, the folder is being watched and published by GitHub, but it might as well be an htdocs or wwwroot folder in a server elsewhere where files should go through SCP, or an AWS S3 hosted website pushed through AWS CLI. Unattended authentication will be implemented with SSH Keys. Open a term like Git Bash and run \u2018 ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" \u2019. The e-mail is important, the password should NOT be set. You know you did it right if the private key starts with \u201c -----BEGIN RSA PRIVATE KEY----- \u201c Private key is kept with CircleCI, public key goes to the remote server. To set up the public key: In GitHub, it\u2019s the path to the repository plus /settings/keys at the end; in GitLab, it\u2019s /settings/repository ; In Bitbucket, it\u2019s /admin/access-keys/ ; In a linux server, just add the public key as a new line to ~/.ssh/authorized_keys . To set up the private key in CircleCI repository (not dashboard, repository!), add /edit#ssh to the URL and click Add SSH Key. Hostname must match. E.g.: github.com . Copy the fingerprint. Now in the config.yml, see the fingerprint just before the Push new version command? That\u2019s what makes it. Don\u2019t forget to shred the files. They are meant to be use in these steps but not saved. The script .circleci/push_docs_site.sh is there to guarantee that only new versions of the site are going to be pushed. That\u2019s because sitemap.xml.gz is always generated regardless whether or not there were modifications, so it\u2019ll be left out of the decision.","title":"docs"},{"location":"pipeline/#audit_dependencies","text":"It\u2019s not enough to make sure your code is tight, the code of the dependencies you use must be verified too. NPM audit is quite enough, but just to be safe I also check with Snyk , which connects to other vulnerability databases, such as CVEs from NVD and many others","title":"audit_dependencies"},{"location":"pipeline/#code_review","text":"If you are just starting to code, maybe you have a personal all yours way of organizing your thoughts that almost serves as a signature. It\u2019s no much of a problem if you\u2019re the only one who maintains it, but even in a small team people need to feel conformable giving maintenance to the code of others. That\u2019s why we need a conventional code style. The more consistent you code is, the cleaner will be your commits, and the faster other people will be able to understand it. TSLint is the default linter for TypeScript, and it\u2019s main objective is to enforce the code style. The most popular set of rules are tslint-config-airbnb , tslint-eslint-rules and tslint-config-prettier . Choose one of them, or make yourself another based on one of them. Just do it. This job is saving the result as a report in JUnit format because if it fails, you can see the occurrences in CircleCI UI.","title":"code_review"},{"location":"pipeline/#build","text":"Build is build, no further explanation required. Only this job has a different set of options for production code and development code.","title":"build"},{"location":"rtd/","text":"ReadTheDocs","title":"ReadTheDocs"},{"location":"rtd/#readthedocs","text":"","title":"ReadTheDocs"},{"location":"security/","text":"Security","title":"Security"},{"location":"security/#security","text":"","title":"Security"},{"location":"semver/","text":"Semantic Versioning The following modules/articles/links are yet to be understood and applied. These 6 essential tools will release, version, and maintain your NPM modules for you Commitizen for contributors","title":"SemVer"},{"location":"semver/#semantic-versioning","text":"The following modules/articles/links are yet to be understood and applied. These 6 essential tools will release, version, and maintain your NPM modules for you Commitizen for contributors","title":"Semantic Versioning"},{"location":"tests/","text":"Unit Tests","title":"Unit Tests"},{"location":"tests/#unit-tests","text":"","title":"Unit Tests"},{"location":"uptodateness/","text":"","title":"Up-to-dateness"},{"location":"vscode/","text":"Visual Code Extensions","title":"Visual Code"},{"location":"vscode/#visual-code-extensions","text":"","title":"Visual Code Extensions"}]}